

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Oct 30 19:47:25 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     9                           	dabs	1,0x7E,2
    10     0000                     
    11                           ; Generated 22/03/2023 GMT
    12                           ; 
    13                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution. Publication is not required when
    27                           ;        this file is used in an embedded application.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F877A Definitions
    43                           ; 
    44                           ; SFR Addresses
    45     0000                     	;# 
    46     0001                     	;# 
    47     0002                     	;# 
    48     0003                     	;# 
    49     0004                     	;# 
    50     0005                     	;# 
    51     0006                     	;# 
    52     0007                     	;# 
    53     0008                     	;# 
    54     0009                     	;# 
    55     000A                     	;# 
    56     000B                     	;# 
    57     000C                     	;# 
    58     000D                     	;# 
    59     000E                     	;# 
    60     000E                     	;# 
    61     000F                     	;# 
    62     0010                     	;# 
    63     0011                     	;# 
    64     0012                     	;# 
    65     0013                     	;# 
    66     0014                     	;# 
    67     0015                     	;# 
    68     0015                     	;# 
    69     0016                     	;# 
    70     0017                     	;# 
    71     0018                     	;# 
    72     0019                     	;# 
    73     001A                     	;# 
    74     001B                     	;# 
    75     001B                     	;# 
    76     001C                     	;# 
    77     001D                     	;# 
    78     001E                     	;# 
    79     001F                     	;# 
    80     0081                     	;# 
    81     0085                     	;# 
    82     0086                     	;# 
    83     0087                     	;# 
    84     0088                     	;# 
    85     0089                     	;# 
    86     008C                     	;# 
    87     008D                     	;# 
    88     008E                     	;# 
    89     0091                     	;# 
    90     0092                     	;# 
    91     0093                     	;# 
    92     0094                     	;# 
    93     0098                     	;# 
    94     0099                     	;# 
    95     009C                     	;# 
    96     009D                     	;# 
    97     009E                     	;# 
    98     009F                     	;# 
    99     010C                     	;# 
   100     010D                     	;# 
   101     010E                     	;# 
   102     010F                     	;# 
   103     018C                     	;# 
   104     018D                     	;# 
   105     0000                     	;# 
   106     0001                     	;# 
   107     0002                     	;# 
   108     0003                     	;# 
   109     0004                     	;# 
   110     0005                     	;# 
   111     0006                     	;# 
   112     0007                     	;# 
   113     0008                     	;# 
   114     0009                     	;# 
   115     000A                     	;# 
   116     000B                     	;# 
   117     000C                     	;# 
   118     000D                     	;# 
   119     000E                     	;# 
   120     000E                     	;# 
   121     000F                     	;# 
   122     0010                     	;# 
   123     0011                     	;# 
   124     0012                     	;# 
   125     0013                     	;# 
   126     0014                     	;# 
   127     0015                     	;# 
   128     0015                     	;# 
   129     0016                     	;# 
   130     0017                     	;# 
   131     0018                     	;# 
   132     0019                     	;# 
   133     001A                     	;# 
   134     001B                     	;# 
   135     001B                     	;# 
   136     001C                     	;# 
   137     001D                     	;# 
   138     001E                     	;# 
   139     001F                     	;# 
   140     0081                     	;# 
   141     0085                     	;# 
   142     0086                     	;# 
   143     0087                     	;# 
   144     0088                     	;# 
   145     0089                     	;# 
   146     008C                     	;# 
   147     008D                     	;# 
   148     008E                     	;# 
   149     0091                     	;# 
   150     0092                     	;# 
   151     0093                     	;# 
   152     0094                     	;# 
   153     0098                     	;# 
   154     0099                     	;# 
   155     009C                     	;# 
   156     009D                     	;# 
   157     009E                     	;# 
   158     009F                     	;# 
   159     010C                     	;# 
   160     010D                     	;# 
   161     010E                     	;# 
   162     010F                     	;# 
   163     018C                     	;# 
   164     018D                     	;# 
   165     0015                     _CCPR1L	set	21
   166     0092                     _TMR2ON	set	146
   167     0091                     _T2CKPS1	set	145
   168     0090                     _T2CKPS0	set	144
   169     00BB                     _CCP1M3	set	187
   170     00BA                     _CCP1M2	set	186
   171     00BD                     _CCP1X	set	189
   172     00BC                     _CCP1Y	set	188
   173     0092                     _PR2	set	146
   174     043A                     _TRISC2	set	1082
   175                           
   176                           	psect	cinit
   177     07FC                     start_initialization:	
   178                           ; #config settings
   179                           
   180     07FC                     __initialization:
   181     07FC                     end_of_initialization:	
   182                           ;End of C runtime variable initialization code
   183                           
   184     07FC                     __end_of__initialization:
   185     07FC  0183               	clrf	3
   186     07FD  120A  118A  2F91   	ljmp	_main	;jump to C main() function
   187                           
   188                           	psect	cstackCOMMON
   189     0070                     __pcstackCOMMON:
   190     0070                     ?_PMW1SetDuty:
   191     0070                     ?_main:	
   192                           ; 1 bytes @ 0x0
   193                           
   194     0070                     PMW1SetDuty@DC:	
   195                           ; 1 bytes @ 0x0
   196                           
   197                           
   198                           ; 2 bytes @ 0x0
   199     0070                     	ds	2
   200     0072                     ??_PMW1SetDuty:
   201                           
   202                           ; 1 bytes @ 0x2
   203     0072                     	ds	2
   204     0074                     ??_main:
   205                           
   206                           ; 1 bytes @ 0x4
   207     0074                     	ds	2
   208     0076                     main@DC:
   209                           
   210                           ; 2 bytes @ 0x6
   211     0076                     	ds	2
   212                           
   213                           	psect	maintext
   214     0791                     __pmaintext:	
   215 ;;
   216 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   217 ;;
   218 ;; *************** function _main *****************
   219 ;; Defined at:
   220 ;;		line 20 in file "newmain.c"
   221 ;; Parameters:    Size  Location     Type
   222 ;;		None
   223 ;; Auto vars:     Size  Location     Type
   224 ;;  DC              2    6[COMMON] unsigned short 
   225 ;; Return value:  Size  Location     Type
   226 ;;                  1    wreg      void 
   227 ;; Registers used:
   228 ;;		wreg, status,2, status,0, pclath, cstack
   229 ;; Tracked objects:
   230 ;;		On entry : B00/0
   231 ;;		On exit  : 0/0
   232 ;;		Unchanged: 0/0
   233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   234 ;;      Params:         0       0       0       0       0
   235 ;;      Locals:         2       0       0       0       0
   236 ;;      Temps:          2       0       0       0       0
   237 ;;      Totals:         4       0       0       0       0
   238 ;;Total ram usage:        4 bytes
   239 ;; Hardware stack levels required when called: 1
   240 ;; This function calls:
   241 ;;		_PMW1SetDuty
   242 ;; This function is called by:
   243 ;;		Startup code after reset
   244 ;; This function uses a non-reentrant model
   245 ;;
   246                           
   247     0791                     _main:	
   248                           ;psect for function _main
   249                           
   250     0791                     l626:	
   251                           ;incstack = 0
   252                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   253                           
   254                           
   255                           ;newmain.c: 22:     CCP1M2 = 1;
   256     0791  1283               	bcf	3,5	;RP0=0, select bank0
   257     0792  1303               	bcf	3,6	;RP1=0, select bank0
   258     0793  1517               	bsf	23,2	;volatile
   259                           
   260                           ;newmain.c: 23:     CCP1M3 = 1;
   261     0794  1597               	bsf	23,3	;volatile
   262                           
   263                           ;newmain.c: 25:     TRISC2 = 0;
   264     0795  1683               	bsf	3,5	;RP0=1, select bank1
   265     0796  1303               	bcf	3,6	;RP1=0, select bank1
   266     0797  1107               	bcf	7,2	;volatile
   267                           
   268                           ;newmain.c: 27:     T2CKPS0 = 1;
   269     0798  1283               	bcf	3,5	;RP0=0, select bank0
   270     0799  1303               	bcf	3,6	;RP1=0, select bank0
   271     079A  1412               	bsf	18,0	;volatile
   272                           
   273                           ;newmain.c: 28:     T2CKPS1 = 0;
   274     079B  1092               	bcf	18,1	;volatile
   275     079C                     l628:
   276                           
   277                           ;newmain.c: 30:     PR2 = 124;
   278     079C  307C               	movlw	124
   279     079D  1683               	bsf	3,5	;RP0=1, select bank1
   280     079E  1303               	bcf	3,6	;RP1=0, select bank1
   281     079F  0092               	movwf	18	;volatile
   282     07A0                     l630:
   283                           
   284                           ;newmain.c: 32:     TMR2ON = 1;
   285     07A0  1283               	bcf	3,5	;RP0=0, select bank0
   286     07A1  1303               	bcf	3,6	;RP1=0, select bank0
   287     07A2  1512               	bsf	18,2	;volatile
   288     07A3                     l632:
   289     07A3                     l634:
   290                           
   291                           ;newmain.c: 36:         DC = 0;
   292     07A3  01F6               	clrf	main@DC
   293     07A4  01F7               	clrf	main@DC+1
   294                           
   295                           ;newmain.c: 38:         while(DC < 500){
   296     07A5  2FBE               	goto	l642
   297     07A6                     l636:
   298                           
   299                           ;newmain.c: 39:             PMW1SetDuty(DC);
   300     07A6  0877               	movf	main@DC+1,w
   301     07A7  00F1               	movwf	PMW1SetDuty@DC+1
   302     07A8  0876               	movf	main@DC,w
   303     07A9  00F0               	movwf	PMW1SetDuty@DC
   304     07AA  120A  118A  2770  120A  118A  	fcall	_PMW1SetDuty
   305     07AF                     l638:
   306                           
   307                           ;newmain.c: 40:             DC++;
   308     07AF  3001               	movlw	1
   309     07B0  07F6               	addwf	main@DC,f
   310     07B1  1803               	skipnc
   311     07B2  0AF7               	incf	main@DC+1,f
   312     07B3  3000               	movlw	0
   313     07B4  07F7               	addwf	main@DC+1,f
   314     07B5                     l640:
   315                           
   316                           ;newmain.c: 41:             _delay((unsigned long)((2)*(4000000/4000.0)));
   317     07B5  3003               	movlw	3
   318     07B6  00F5               	movwf	??_main+1
   319     07B7  3097               	movlw	151
   320     07B8  00F4               	movwf	??_main
   321     07B9                     u117:
   322     07B9  0BF4               	decfsz	??_main,f
   323     07BA  2FB9               	goto	u117
   324     07BB  0BF5               	decfsz	??_main+1,f
   325     07BC  2FB9               	goto	u117
   326     07BD  2FBE               	nop2
   327     07BE                     l642:
   328                           
   329                           ;newmain.c: 38:         while(DC < 500){
   330     07BE  3001               	movlw	1
   331     07BF  0277               	subwf	main@DC+1,w
   332     07C0  30F4               	movlw	244
   333     07C1  1903               	skipnz
   334     07C2  0276               	subwf	main@DC,w
   335     07C3  1C03               	skipc
   336     07C4  2FC6               	goto	u91
   337     07C5  2FC7               	goto	u90
   338     07C6                     u91:
   339     07C6  2FA6               	goto	l636
   340     07C7                     u90:
   341     07C7                     l644:
   342                           
   343                           ;newmain.c: 43:         _delay((unsigned long)((100)*(4000000/4000.0)));
   344     07C7  3082               	movlw	130
   345     07C8  00F5               	movwf	??_main+1
   346     07C9  30DD               	movlw	221
   347     07CA  00F4               	movwf	??_main
   348     07CB                     u127:
   349     07CB  0BF4               	decfsz	??_main,f
   350     07CC  2FCB               	goto	u127
   351     07CD  0BF5               	decfsz	??_main+1,f
   352     07CE  2FCB               	goto	u127
   353     07CF  2FD0               	nop2
   354                           
   355                           ;newmain.c: 45:         while(DC > 0){
   356     07D0  2FE9               	goto	l652
   357     07D1                     l646:
   358                           
   359                           ;newmain.c: 46:             PMW1SetDuty(DC);
   360     07D1  0877               	movf	main@DC+1,w
   361     07D2  00F1               	movwf	PMW1SetDuty@DC+1
   362     07D3  0876               	movf	main@DC,w
   363     07D4  00F0               	movwf	PMW1SetDuty@DC
   364     07D5  120A  118A  2770  120A  118A  	fcall	_PMW1SetDuty
   365     07DA                     l648:
   366                           
   367                           ;newmain.c: 47:             DC--;
   368     07DA  3001               	movlw	1
   369     07DB  02F6               	subwf	main@DC,f
   370     07DC  3000               	movlw	0
   371     07DD  1C03               	skipc
   372     07DE  03F7               	decf	main@DC+1,f
   373     07DF  02F7               	subwf	main@DC+1,f
   374     07E0                     l650:
   375                           
   376                           ;newmain.c: 48:             _delay((unsigned long)((2)*(4000000/4000.0)));
   377     07E0  3003               	movlw	3
   378     07E1  00F5               	movwf	??_main+1
   379     07E2  3097               	movlw	151
   380     07E3  00F4               	movwf	??_main
   381     07E4                     u137:
   382     07E4  0BF4               	decfsz	??_main,f
   383     07E5  2FE4               	goto	u137
   384     07E6  0BF5               	decfsz	??_main+1,f
   385     07E7  2FE4               	goto	u137
   386     07E8  2FE9               	nop2
   387     07E9                     l652:
   388                           
   389                           ;newmain.c: 45:         while(DC > 0){
   390     07E9  0876               	movf	main@DC,w
   391     07EA  0477               	iorwf	main@DC+1,w
   392     07EB  1D03               	btfss	3,2
   393     07EC  2FEE               	goto	u101
   394     07ED  2FEF               	goto	u100
   395     07EE                     u101:
   396     07EE  2FD1               	goto	l646
   397     07EF                     u100:
   398     07EF                     l654:
   399                           
   400                           ;newmain.c: 50:         _delay((unsigned long)((100)*(4000000/4000.0)));
   401     07EF  3082               	movlw	130
   402     07F0  00F5               	movwf	??_main+1
   403     07F1  30DD               	movlw	221
   404     07F2  00F4               	movwf	??_main
   405     07F3                     u147:
   406     07F3  0BF4               	decfsz	??_main,f
   407     07F4  2FF3               	goto	u147
   408     07F5  0BF5               	decfsz	??_main+1,f
   409     07F6  2FF3               	goto	u147
   410     07F7  2FF8               	nop2
   411     07F8  2FA3               	goto	l634
   412     07F9  120A  118A  2800   	ljmp	start
   413     07FC                     __end_of_main:
   414                           
   415                           	psect	text1
   416     0770                     __ptext1:	
   417 ;; *************** function _PMW1SetDuty *****************
   418 ;; Defined at:
   419 ;;		line 6 in file "newmain.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;  DC              2    0[COMMON] unsigned short 
   422 ;; Auto vars:     Size  Location     Type
   423 ;;		None
   424 ;; Return value:  Size  Location     Type
   425 ;;                  1    wreg      void 
   426 ;; Registers used:
   427 ;;		wreg, status,2, status,0
   428 ;; Tracked objects:
   429 ;;		On entry : 0/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   433 ;;      Params:         2       0       0       0       0
   434 ;;      Locals:         0       0       0       0       0
   435 ;;      Temps:          2       0       0       0       0
   436 ;;      Totals:         4       0       0       0       0
   437 ;;Total ram usage:        4 bytes
   438 ;; Hardware stack levels used: 1
   439 ;; This function calls:
   440 ;;		Nothing
   441 ;; This function is called by:
   442 ;;		_main
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446     0770                     _PMW1SetDuty:	
   447                           ;psect for function _PMW1SetDuty
   448                           
   449     0770                     l620:	
   450                           ;incstack = 0
   451                           ; Regs used in _PMW1SetDuty: [wreg+status,2+status,0]
   452                           
   453                           
   454                           ;newmain.c: 8:     if(DC < 1024){
   455     0770  3004               	movlw	4
   456     0771  0271               	subwf	PMW1SetDuty@DC+1,w
   457     0772  3000               	movlw	0
   458     0773  1903               	skipnz
   459     0774  0270               	subwf	PMW1SetDuty@DC,w
   460     0775  1803               	skipnc
   461     0776  2F78               	goto	u61
   462     0777  2F79               	goto	u60
   463     0778                     u61:
   464     0778  2F90               	goto	l26
   465     0779                     u60:
   466     0779                     l622:
   467                           
   468                           ;newmain.c: 9:     CCP1Y = DC & 1;
   469     0779  1870               	btfsc	PMW1SetDuty@DC,0
   470     077A  2F7C               	goto	u71
   471     077B  2F80               	goto	u70
   472     077C                     u71:
   473     077C  1283               	bcf	3,5	;RP0=0, select bank0
   474     077D  1303               	bcf	3,6	;RP1=0, select bank0
   475     077E  1617               	bsf	23,4	;volatile
   476     077F  2F83               	goto	u84
   477     0780                     u70:
   478     0780  1283               	bcf	3,5	;RP0=0, select bank0
   479     0781  1303               	bcf	3,6	;RP1=0, select bank0
   480     0782  1217               	bcf	23,4	;volatile
   481     0783                     u84:
   482                           
   483                           ;newmain.c: 10:     CCP1X = DC & 2;
   484     0783  1297               	bcf	23,5	;volatile
   485     0784                     l624:
   486                           
   487                           ;newmain.c: 11:     CCPR1L = DC >> 2;
   488     0784  0871               	movf	PMW1SetDuty@DC+1,w
   489     0785  00F3               	movwf	??_PMW1SetDuty+1
   490     0786  0870               	movf	PMW1SetDuty@DC,w
   491     0787  00F2               	movwf	??_PMW1SetDuty
   492     0788  1003               	clrc
   493     0789  0CF3               	rrf	??_PMW1SetDuty+1,f
   494     078A  0CF2               	rrf	??_PMW1SetDuty,f
   495     078B  1003               	clrc
   496     078C  0CF3               	rrf	??_PMW1SetDuty+1,f
   497     078D  0CF2               	rrf	??_PMW1SetDuty,f
   498     078E  0872               	movf	??_PMW1SetDuty,w
   499     078F  0095               	movwf	21	;volatile
   500     0790                     l26:
   501     0790  0008               	return
   502     0791                     __end_of_PMW1SetDuty:
   503     007E                     btemp	set	126	;btemp
   504     007E                     wtemp0	set	126
   505                           
   506                           	psect	config
   507                           
   508                           ;Config register CONFIG @ 0x2007
   509                           ;	Oscillator Selection bits
   510                           ;	FOSC = XT, XT oscillator
   511                           ;	Watchdog Timer Enable bit
   512                           ;	WDTE = OFF, WDT disabled
   513                           ;	Power-up Timer Enable bit
   514                           ;	PWRTE = ON, PWRT enabled
   515                           ;	Brown-out Reset Enable bit
   516                           ;	BOREN = ON, BOR enabled
   517                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   518                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   519                           ;	Data EEPROM Memory Code Protection bit
   520                           ;	CPD = OFF, Data EEPROM code protection off
   521                           ;	Flash Program Memory Write Enable bits
   522                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   523                           ;	In-Circuit Debugger Mode bit
   524                           ;	DEBUG = 0x1, unprogrammed default
   525                           ;	Flash Program Memory Code Protection bit
   526                           ;	CP = OFF, Code protection off
   527     2007                     	org	8199
   528     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PMW1SetDuty

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     310
                                              4 COMMON     4     4      0
                        _PMW1SetDuty
 ---------------------------------------------------------------------------------
 (1) _PMW1SetDuty                                          4     2      2     218
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PMW1SetDuty

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Oct 30 19:47:25 2023

                     l26 0790                       u60 0779                       u61 0778  
                     u70 0780                       u71 077C                       u90 07C7  
                     u91 07C6                       u84 0783                      l620 0770  
                    l622 0779                      l630 07A0                      l624 0784  
                    l640 07B5                      l632 07A3                      l650 07E0  
                    l642 07BE                      l634 07A3                      l626 0791  
                    l652 07E9                      l644 07C7                      l636 07A6  
                    l628 079C                      l654 07EF                      l646 07D1  
                    l638 07AF                      l648 07DA                      u100 07EF  
                    u101 07EE                      u117 07B9                      u127 07CB  
                    u137 07E4                      u147 07F3                      _PR2 0092  
                   _main 0791                     btemp 007E                     start 0000  
                  ?_main 0070                    _CCP1X 00BD                    _CCP1Y 00BC  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0074             ?_PMW1SetDuty 0070  
                 _CCP1M2 00BA                   _CCP1M3 00BB                   _CCPR1L 0015  
                 _TMR2ON 0092                   _TRISC2 043A                   main@DC 0076  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 0791  
                _T2CKPS0 0090                  _T2CKPS1 0091            PMW1SetDuty@DC 0070  
                __ptext1 0770     end_of_initialization 07FC      start_initialization 07FC  
              ___latbits 0002            ??_PMW1SetDuty 0072      __end_of_PMW1SetDuty 0791  
            _PMW1SetDuty 0770  
